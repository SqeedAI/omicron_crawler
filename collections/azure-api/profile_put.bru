meta {
  name: profile_put
  type: http
  seq: 2
}

post {
  url: https://sqeed-dev-bus.servicebus.windows.net/profile/messages
  body: json
  auth: none
}

headers {
  ~api-version: 2022-01-01-preview
}

body:json {
  {
    "ids": [
      "ACoAACsn2CwBmbhjhFqlxtFLq-o37KnMft_oChQ",
      "ACoAABi9KbIBAfKFcjR_jKZd_1uEJFgSO8w7zmM",
      "ACoAACMalh4BE7a0pucrbg4oNETy6X92CMoTjzs",
      "ACoAAAtOq1EBpe6wrCh9hX53rMV95qzb5eAZz00",
      "ACoAAD7m3owBBAnuAjV26ixRQSoZF-rvXDI893E",
      "ACoAAEi-UaMBFWnxr4uHw_P0LfjVJ8qbniHUy9c",
      "ACoAAAv6A7sBwLnB3Twlw70VyRfxDr7HbbdbIOc",
      "ACoAACuLHFMBBtF0zYJ92GXtJde88SWmVY3s_6U",
      "ACoAACYMGUUB1oLCSAjv9LyFBo0FnrDZFzTB7SE",
      "ACoAAA8SLpgBInYRawveZeY5rq4RB0V4wjX0SCY",
      "ACoAAAtOq1EBpe6wrCh9hX53rMV95qzb5eAZz00",
      "ACoAACz3ZKYBqtlAKurKM7LPWIEnea35M9Q4rpQ",
      "ACoAACgYMhwBB-BWRY0EbXc2ncmXy0Y4g0rhFJA",
      "ACoAADQXoyoBH0i4fjsNSQWEEYSzE0nMWzqS94s",
      "ACoAAC5YHroBHjlUr6ldfKLX5GAAzblxXZWjs80",
      "ACoAAFF1Uw4B7jfBYtOv6YtZ9Sqwyx48xUV3myw"
    ]
  }
}

body:text {
  Hello World
}

body:xml {
  Test1
}

script:pre-request {
  const CryptoJS = require('crypto-js');
  
  function createServiceBusOrEventHubsSASToken(resourceUri, sasKeyName, sasKey) {
      if (!resourceUri || !sasKeyName  || !sasKey) {
          throw "Missing required parameter";
      }
      const encoded = encodeURIComponent(resourceUri);
      const now = new Date();
      const minute = 60;
      const ttl = Math.round(now.getTime() / 1000) + minute;
      const signature = encoded + '\n' + ttl;
      const hash = CryptoJS.HmacSHA256(signature, sasKey).toString(CryptoJS.enc.Base64);
      return 'SharedAccessSignature sr=' + encoded + '&sig=' +
          encodeURIComponent(hash) + '&se=' + ttl + '&skn=' + sasKeyName;
  }
  
  const uri = 'https://sqeed-dev-bus.servicebus.windows.net/profile/';  // Your Service Bus namespace
  const sasKeyName = 'rw';  // The name of your Shared Access Policy
  const sasKey = 'xIf1mAf1YIRFq8WoUk4me4yG2XILTDUH7+ASbJl066Y=';  // Your primary/secondary key
  
  const token = createServiceBusOrEventHubsSASToken(uri, sasKeyName, sasKey);
  req.setHeader('Authorization', token);
  req.setHeader('Date', new Date().toUTCString());
}
