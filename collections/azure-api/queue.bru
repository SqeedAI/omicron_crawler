meta {
  name: queue
  type: http
  seq: 2
}

post {
  url: https://sqeed-dev-bus.servicebus.windows.net/sqeed-dev-q-test01/messages
  body: xml
  auth: none
}

headers {
  BrokerProperties: null
}

body:text {
  Hello World
}

body:xml {
  Test1
}

script:pre-request {
  const CryptoJS = require('crypto-js');
  
  function createServiceBusOrEventHubsSASToken(resourceUri, sasKeyName, sasKey) {
      if (!resourceUri || !sasKeyName  || !sasKey) {
          throw "Missing required parameter";
      }
      const encoded = encodeURIComponent(resourceUri);
      const now = new Date();
      const minute = 60;
      const ttl = Math.round(now.getTime() / 1000) + minute;
      const signature = encoded + '\n' + ttl;
      const hash = CryptoJS.HmacSHA256(signature, sasKey).toString(CryptoJS.enc.Base64);
      return 'SharedAccessSignature sr=' + encoded + '&sig=' +
          encodeURIComponent(hash) + '&se=' + ttl + '&skn=' + sasKeyName;
  }
  
  const uri = 'https://sqeed-dev-bus.servicebus.windows.net/sqeed-dev-q-test01/';  // Your Service Bus namespace
  const sasKeyName = 'test-send';  // The name of your Shared Access Policy
  const sasKey = '9a5Pep//OpaVPPis5h+pdNJXETA3DjaKZ+ASbG8Yts0=';  // Your primary/secondary key
  
  const token = createServiceBusOrEventHubsSASToken(uri, sasKeyName, sasKey);
  req.setHeader('Authorization', token);
}
